name: Production Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Required for creating releases
  actions: read
  checks: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.6'
        channel: 'stable'
        
    - name: Setup Node.js for Firebase
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Decode production google-services.json
      run: |
        echo "${{ secrets.GOOGLE_SERVICES_JSON_PROD }}" | base64 -d > android/app/google-services.json
        
    - name: Decode keystore
      run: |
        echo "${{ secrets.KEYSTORE_FILE_PROD }}" | base64 -d > android/app/production-keystore.jks
        
    - name: Create production key.properties
      run: |
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "storeFile=production-keystore.jks" >> android/key.properties
        
    - name: Configure Google Client ID for production
      run: |
        sed -i 's/{{GOOGLE_CLIENT_ID}}/${{ secrets.GOOGLE_CLIENT_ID_PRODUCTION }}/g' web/index.html
        
    - name: Build Flutter Web (Production)
      run: flutter build web --release --dart-define=ENVIRONMENT=production
      
    - name: Deploy to Firebase Hosting (Production)
      run: |
        firebase use fitness-tracker-p2025 --token "${{ secrets.FIREBASE_TOKEN }}"
        firebase deploy --only hosting --token "${{ secrets.FIREBASE_TOKEN }}"
        
    - name: Build release APK
      run: flutter build apk --release
      
    - name: Build App Bundle (for Play Store)
      run: flutter build appbundle --release
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: production-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Upload AAB artifact  
      uses: actions/upload-artifact@v4
      with:
        name: production-aab
        path: build/app/outputs/bundle/release/app-release.aab
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/bundle/release/app-release.aab
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}